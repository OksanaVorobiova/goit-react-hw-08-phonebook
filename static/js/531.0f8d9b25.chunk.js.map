{"version":3,"file":"static/js/531.0f8d9b25.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/Contacts/Filter/Filter.styled.js","components/Contacts/Filter/Filter.jsx","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Form/Form.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  border: 1px dashed #a2cfd6;\n  border-radius: 8px;\n  padding: 8px;\n\n  li {\n    padding: 5px;\n    border-radius: 8px;\n    border: 1px solid #10b1ca;\n\n    &:not(:last-child) {\n      margin-bottom: 5px;\n    }\n\n    button {\n      border-radius: 8px;\n      border: 1px solid #10b1ca;\n      background-color: #a2cfd6;\n      padding: 5px;\n\n      color: #313131;\n      font-weight: 400;\n      font-size: 16px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  position: relative;\n  top: 50px;\n  height: 100vh;\n  width: 100vw;\n\n  h2 {\n    margin-bottom: 5px;\n  }\n`;\n","import { SectionStyled } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <h2>{title}</h2>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  gap: 10px;\n  color: #313131;\n  font-weight: 600;\n\n  input {\n    padding: 5px;\n    border-radius: 8px;\n    border: 1px solid #10b1ca;\n  }\n`;\n","import { FilterLabel } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n//import { getFilter } from 'redux/selectors';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" onChange={handleChange} />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","//import { useState } from 'react';\nimport { FormStyled } from './Form.styled';\n//import { nanoid } from 'nanoid';\n//import { addContact } from 'redux/contactsSlice';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const Form = ({ onSubmit }) => {\n  // const [name, setName] = useState('');\n  // const [number, setNumber] = useState('');\n\n  // const contact = { name, number };\n  const dispatch = useDispatch();\n\n  /*const handleChange = ({ target: { name, value } }) => {\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };*/\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    console.log(e.currentTarget.elements);\n    const [name, number] = e.target.elements;\n\n    //onSubmit({ ...contact, id: nanoid() });\n    // dispatch(addContact(name.value, number.value));\n    dispatch(\n      addContact({\n        //  id: Date.now(),\n        name: name.value,\n        number: number.value,\n      })\n    );\n    e.target.reset();\n  };\n\n  return (\n    <FormStyled onSubmit={handleFormSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </FormStyled>\n  );\n};\n","import { ContactList } from './Contacts.styled';\n//import { selectContacts, selectFilter } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n//import { deleteContact } from 'redux/contactsSlice';\n//import { useEffect } from 'react';\n//import { useMemo } from 'react';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts, selectLoading } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Blocks } from 'react-loader-spinner';\nimport { Section } from 'components/Section/Section';\nimport { Filter } from './Filter/Filter';\nimport { Form } from 'components/Form/Form';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectLoading);\n  // const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // console.log(contacts);\n  }, [dispatch]);\n\n  const handleClick = e => {\n    dispatch(deleteContact(e.target.id));\n    // dispatch(fetchContacts());\n  };\n\n  if (isLoading) {\n    return (\n      <Section>\n        <Blocks />\n      </Section>\n    );\n  } else if (contacts.length > 0) {\n    return (\n      <Section>\n        <Form />\n        <Filter />\n        <ContactList>\n          {contacts.map(({ id, name, number }) => (\n            <li key={id}>\n              <p>\n                {name}: {number}\n              </p>\n              <button type=\"button\" name=\"delete\" id={id} onClick={handleClick}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ContactList>\n      </Section>\n    );\n  } else if (contacts.length === 0) {\n    return (\n      <Section>\n        <Form />\n        <Filter />\n        <ContactList>\n          <li>\n            <p>No contacts here yet</p>\n          </li>\n        </ContactList>\n      </Section>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  width: 70vw;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px dashed #a2cfd6;\n  border-radius: 8px;\n  padding: 8px;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    align-items: center;\n\n    font-weight: 600;\n    color: #313131;\n    font-size: 18px;\n\n    input {\n      width: 150%;\n      padding: 5px;\n      border-radius: 8px;\n      border: 1px solid #10b1ca;\n    }\n  }\n\n  button {\n    margin-top: 10px;\n    border-radius: 8px;\n    border: 1px solid #10b1ca;\n    background-color: #a2cfd6;\n    padding: 5px;\n\n    color: #313131;\n    font-weight: 400;\n    font-size: 16px;\n  }\n`;\n"],"names":["ContactList","styled","_templateObject","_taggedTemplateLiteral","SectionStyled","Section","_ref","title","children","_jsxs","_jsx","FilterLabel","Filter","dispatch","useDispatch","type","name","onChange","e","filterContacts","currentTarget","value","Form","onSubmit","FormStyled","preventDefault","console","log","elements","_e$target$elements","_slicedToArray","target","number","addContact","reset","pattern","required","Contacts","contacts","useSelector","selectVisibleContacts","isLoading","selectLoading","useEffect","fetchContacts","handleClick","deleteContact","id","Blocks","length","map","onClick"],"sourceRoot":""}